ignore:
  resource_names:
    - CustomAvailabilityZone
    #- DBCluster
    - DBClusterEndpoint
    #- DBClusterParameterGroup
    - DBClusterSnapshot
    #- DBInstance
    - DBInstanceReadReplica
    #- DBParameterGroup
    - DBProxy
    - DBProxyEndpoint
    #- DBSecurityGroup
    - DBSnapshot
    #- DBSubnetGroup
    - EventSubscription
    #- GlobalCluster
    - OptionGroup
  field_paths:
operations:
  ModifyDBCluster:
    override_values:
      # The whole concept of a "maintenance window" isn't aligned with the
      # declarative state model in Kubernetes. Users should build "maintenance
      # window" functionality at a higher layer than the APIs that manage the
      # lifecycle of individual resources like a DB cluster or DB instance. For
      # example, users can build maintenance window functionality into their
      # deployment pipeline solution or GitOps solution.
      #
      # We override the value of the ApplyImmediately field in the modify
      # operations to "true" because we want changes that a Kubernetes user
      # makes to a resource's Spec to be reconciled by the ACK service
      # controller, not a different service.
      ApplyImmediately: true
  DeleteDBCluster:
    override_values:
      # Clearly this is not ideal, but will suffice until we add custom hook
      # points to the build_request methods to enable a genmeration of the
      # final snapshot identifier to use.
      SkipFinalSnapshot: true
  ModifyDBInstance:
    override_values:
      # The whole concept of a "maintenance window" isn't aligned with the
      # declarative state model in Kubernetes. Users should build "maintenance
      # window" functionality at a higher layer than the APIs that manage the
      # lifecycle of individual resources like a DB cluster or DB instance. For
      # example, users can build maintenance window functionality into their
      # deployment pipeline solution or GitOps solution.
      #
      # We override the value of the ApplyImmediately field in the modify
      # operations to "true" because we want changes that a Kubernetes user
      # makes to a resource's Spec to be reconciled by the ACK service
      # controller, not a different service.
      ApplyImmediately: true
  DeleteDBInstance:
    override_values:
      # Clearly this is not ideal, but will suffice until we add custom hook
      # points to the build_request methods to enable a genmeration of the
      # final snapshot identifier to use.
      SkipFinalSnapshot: true
resources:
  DBCluster:
    update_operation:
      # We need a custom update implementation until the issue behind
      # https://github.com/aws-controllers-k8s/community/issues/917 is
      # resolved.
      custom_method_name: customUpdate
    hooks:
      sdk_create_post_set_output:
        template_path: hooks/db_cluster/sdk_create_post_set_output.go.tpl
      sdk_read_many_post_set_output:
        template_path: hooks/db_cluster/sdk_read_many_post_set_output.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/db_cluster/sdk_delete_pre_build_request.go.tpl
    exceptions:
      terminal_codes:
        - DBClusterQuotaExceededFault
        - DBParameterGroupNotFound
        - DBSubnetGroupNotFoundFault
        - DBSubnetGroupDoesNotCoverEnoughAZs
        - DomainNotFoundFault
        - InsufficientStorageClusterCapacity
        - InvalidParameter
        - InvalidParameterValue
        - InvalidParameterCombination
        - InvalidDBClusterStateFault
        - InvalidDBInstanceStateFault
        - InvalidSubnet
        - InvalidVPCNetworkStateFault
        - KMSKeyNotAccessibleFault
        - StorageQuotaExceeded
    fields:
      DBClusterIdentifier:
        is_primary_key: true
      MasterUserPassword:
        is_secret: true
  DBClusterParameterGroup:
    renames:
      operations:
        DescribeDBClusterParameterGroups:
          input_fields:
            DBClusterParameterGroupName: Name
        CreateDBClusterParameterGroup:
          input_fields:
            DBClusterParameterGroupName: Name
            DBParameterGroupFamily: Family
        DeleteDBClusterParameterGroup:
          input_fields:
            DBClusterParameterGroupName: Name
    fields:
      Name:
        is_primary_key: true
      Parameters:
        from:
          operation: ModifyDBClusterParameterGroup
          path: Parameters
  DBInstance:
    hooks:
      sdk_create_post_set_output:
        template_path: hooks/db_instance/sdk_create_post_set_output.go.tpl
      sdk_read_many_post_set_output:
        template_path: hooks/db_instance/sdk_read_many_post_set_output.go.tpl
      sdk_update_pre_build_request:
        template_path: hooks/db_instance/sdk_update_pre_build_request.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/db_instance/sdk_delete_pre_build_request.go.tpl
    exceptions:
      terminal_codes:
        - InvalidParameter
        - InvalidParameterValue
        - InvalidParameterCombination
        - InvalidDBInstanceState
        - DBSecurityGroupNotFound
        - DBSubnetGroupNotFoundFault
        - DBParameterGroupNotFound
    fields:
      AvailabilityZone:
        late_initialize: {}
      DBInstanceIdentifier:
        is_primary_key: true
      # Because the Create input and Create/Update/ReadOne output shapes for
      # the DBSecurityGroups field have different Go types, we are instructing
      # the code generator to set the Spec.DBSecurityGroups field (which is a
      # []string field) to the set of DBSecurityGroups..DBSecurityGroupName
      # values in the ReadOne method's Output shape.
      DBSecurityGroups:
        set:
          - method: Update
            from: DBSecurityGroupName
          - method: Create
            from: DBSecurityGroupName
          - method: ReadOne
            from: DBSecurityGroupName
      MasterUserPassword:
        is_secret: true
  GlobalCluster:
    exceptions:
      terminal_codes:
        - GlobalClusterAlreadyExistsFault
        - GlobalClusterQuotaExceededFault
        - InvalidDBClusterStateFault
    fields:
      GlobalClusterIdentifier:
        is_primary_key: true
  DBParameterGroup:
    renames:
      operations:
        DescribeDBParameterGroups:
          input_fields:
            DBParameterGroupName: Name
        CreateDBParameterGroup:
          input_fields:
            DBParameterGroupName: Name
            DBParameterGroupFamily: Family
        DeleteDBParameterGroup:
          input_fields:
            DBParameterGroupName: Name
    fields:
      Name:
        is_primary_key: true
      Parameters:
        from:
          operation: ModifyDBParameterGroup
          path: Parameters
  DBSecurityGroup:
    renames:
      operations:
        DescribeDBSecurityGroups:
          input_fields:
            DBSecurityGroupName: Name
        CreateDBSecurityGroup:
          input_fields:
            DBSecurityGroupName: Name
            DBSecurityGroupDescription: Description
        DeleteDBSecurityGroup:
          input_fields:
            DBSecurityGroupName: Name
    fields:
      Name:
        is_primary_key: true
  DBSubnetGroup:
    renames:
      operations:
        DescribeDBSubnetGroups:
          input_fields:
            DBSubnetGroupName: Name
        CreateDBSubnetGroup:
          input_fields:
            DBSubnetGroupName: Name
            DBSubnetGroupDescription: Description
        DeleteDBSubnetGroup:
          input_fields:
            DBSubnetGroupName: Name
    fields:
      Name:
        is_primary_key: true
