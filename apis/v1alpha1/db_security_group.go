// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DBSecurityGroupSpec defines the desired state of DBSecurityGroup.
//
// Contains the details for an Amazon RDS DB security group.
//
// This data type is used as a response element in the DescribeDBSecurityGroups
// action.
type DBSecurityGroupSpec struct {
	// The description for the DB security group.
	// +kubebuilder:validation:Required
	Description *string `json:"description"`
	// The name for the DB security group. This value is stored as a lowercase string.
	//
	// Constraints:
	//
	//    * Must be 1 to 255 letters, numbers, or hyphens.
	//
	//    * First character must be a letter
	//
	//    * Can't end with a hyphen or contain two consecutive hyphens
	//
	//    * Must not be "Default"
	//
	// Example: mysecuritygroup
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// Tags to assign to the DB security group.
	Tags []*Tag `json:"tags,omitempty"`
}

// DBSecurityGroupStatus defines the observed state of DBSecurityGroup
type DBSecurityGroupStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// Contains a list of EC2SecurityGroup elements.
	// +kubebuilder:validation:Optional
	EC2SecurityGroups []*EC2SecurityGroup `json:"ec2SecurityGroups,omitempty"`
	// Contains a list of IPRange elements.
	// +kubebuilder:validation:Optional
	IPRanges []*IPRange `json:"iPRanges,omitempty"`
	// Provides the Amazon Web Services ID of the owner of a specific DB security
	// group.
	// +kubebuilder:validation:Optional
	OwnerID *string `json:"ownerID,omitempty"`
	// Provides the VpcId of the DB security group.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcID,omitempty"`
}

// DBSecurityGroup is the Schema for the DBSecurityGroups API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type DBSecurityGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DBSecurityGroupSpec   `json:"spec,omitempty"`
	Status            DBSecurityGroupStatus `json:"status,omitempty"`
}

// DBSecurityGroupList contains a list of DBSecurityGroup
// +kubebuilder:object:root=true
type DBSecurityGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DBSecurityGroup `json:"items"`
}

func init() {
	SchemeBuilder.Register(&DBSecurityGroup{}, &DBSecurityGroupList{})
}
